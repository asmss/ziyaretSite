{"ast":null,"code":"// src/services/api.js - Hata yönetimini iyileştirelim\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000\n});\n\n// Request interceptor - tüm istekleri loglayalım\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`🔄 API İstek: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error('❌ API İstek Hatası:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor - tüm cevapları loglayalım\napi.interceptors.response.use(response => {\n  console.log(`✅ API Cevap: ${response.status} ${response.config.url}`);\n  return response;\n}, error => {\n  console.error('❌ API Cevap Hatası:', error);\n  if (error.response) {\n    console.error('📊 Hata Detayı:', {\n      status: error.response.status,\n      data: error.response.data,\n      url: error.response.config.url\n    });\n  } else if (error.request) {\n    console.error('🌐 Network Hatası:', error.request);\n  } else {\n    console.error('⚡ İstek Hatası:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport const locationsAPI = {\n  getAll: async () => {\n    const response = await api.get('/locations');\n    return response;\n  },\n  create: async locationData => {\n    const response = await api.post('/locations', locationData);\n    return response.data; // ✅ sadece veriyi döndür\n  },\n  delete: async id => {\n    const response = await api.delete(`/locations/${id}`);\n    return response;\n  },\n  update: async (id, locationData) => {\n    const response = await api.put(`/locations/${id}`, locationData);\n    return response;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","timeout","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","data","message","locationsAPI","getAll","get","locationData","post","delete","id","update","put"],"sources":["/Users/asimkarabulut/Desktop/sevgili_project/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js - Hata yönetimini iyileştirelim\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  timeout: 10000,\n});\n\n// Request interceptor - tüm istekleri loglayalım\napi.interceptors.request.use(\n  (config) => {\n    console.log(`🔄 API İstek: ${config.method?.toUpperCase()} ${config.url}`);\n    return config;\n  },\n  (error) => {\n    console.error('❌ API İstek Hatası:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor - tüm cevapları loglayalım\napi.interceptors.response.use(\n  (response) => {\n    console.log(`✅ API Cevap: ${response.status} ${response.config.url}`);\n    return response;\n  },\n  (error) => {\n    console.error('❌ API Cevap Hatası:', error);\n    if (error.response) {\n      console.error('📊 Hata Detayı:', {\n        status: error.response.status,\n        data: error.response.data,\n        url: error.response.config.url\n      });\n    } else if (error.request) {\n      console.error('🌐 Network Hatası:', error.request);\n    } else {\n      console.error('⚡ İstek Hatası:', error.message);\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport const locationsAPI = {\n  getAll: async () => {\n    const response = await api.get('/locations');\n    return response;\n  },\n  \ncreate: async (locationData) => {\n  const response = await api.post('/locations', locationData);\n  return response.data; // ✅ sadece veriyi döndür\n},\n\n  \n  delete: async (id) => {\n    const response = await api.delete(`/locations/${id}`);\n    return response;\n  },\n  \n  update: async (id, locationData) => {\n    const response = await api.put(`/locations/${id}`, locationData);\n    return response;\n  },\n};\n\nexport default api;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACVC,OAAO,CAACC,GAAG,CAAC,kBAAAF,cAAA,GAAiBD,MAAM,CAACI,MAAM,cAAAH,cAAA,uBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,IAAIL,MAAM,CAACM,GAAG,EAAE,CAAC;EAC1E,OAAON,MAAM;AACf,CAAC,EACAO,KAAK,IAAK;EACTL,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC3C,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,GAAG,CAACK,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC1BW,QAAQ,IAAK;EACZR,OAAO,CAACC,GAAG,CAAC,gBAAgBO,QAAQ,CAACC,MAAM,IAAID,QAAQ,CAACV,MAAM,CAACM,GAAG,EAAE,CAAC;EACrE,OAAOI,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACTL,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC3C,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClBR,OAAO,CAACK,KAAK,CAAC,iBAAiB,EAAE;MAC/BI,MAAM,EAAEJ,KAAK,CAACG,QAAQ,CAACC,MAAM;MAC7BC,IAAI,EAAEL,KAAK,CAACG,QAAQ,CAACE,IAAI;MACzBN,GAAG,EAAEC,KAAK,CAACG,QAAQ,CAACV,MAAM,CAACM;IAC7B,CAAC,CAAC;EACJ,CAAC,MAAM,IAAIC,KAAK,CAACT,OAAO,EAAE;IACxBI,OAAO,CAACK,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACT,OAAO,CAAC;EACpD,CAAC,MAAM;IACLI,OAAO,CAACK,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACM,OAAO,CAAC;EACjD;EACA,OAAOL,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMO,YAAY,GAAG;EAC1BC,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,MAAML,QAAQ,GAAG,MAAMlB,GAAG,CAACwB,GAAG,CAAC,YAAY,CAAC;IAC5C,OAAON,QAAQ;EACjB,CAAC;EAEHjB,MAAM,EAAE,MAAOwB,YAAY,IAAK;IAC9B,MAAMP,QAAQ,GAAG,MAAMlB,GAAG,CAAC0B,IAAI,CAAC,YAAY,EAAED,YAAY,CAAC;IAC3D,OAAOP,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAGCO,MAAM,EAAE,MAAOC,EAAE,IAAK;IACpB,MAAMV,QAAQ,GAAG,MAAMlB,GAAG,CAAC2B,MAAM,CAAC,cAAcC,EAAE,EAAE,CAAC;IACrD,OAAOV,QAAQ;EACjB,CAAC;EAEDW,MAAM,EAAE,MAAAA,CAAOD,EAAE,EAAEH,YAAY,KAAK;IAClC,MAAMP,QAAQ,GAAG,MAAMlB,GAAG,CAAC8B,GAAG,CAAC,cAAcF,EAAE,EAAE,EAAEH,YAAY,CAAC;IAChE,OAAOP,QAAQ;EACjB;AACF,CAAC;AAED,eAAelB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}